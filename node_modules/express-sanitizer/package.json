{
  "name": "express-sanitizer",
  "description": "Express middleware for the sanitizer module.",
  "author": {
    "name": "Mark Andrews",
    "email": "20metresbelow@gmail.com"
  },
  "version": "0.1.1",
  "homepage": "https://github.com/markau/express-sanitizer",
  "repository": {
    "type": "git",
    "url": "git://github.com/markau/express-sanitizer.git"
  },
  "license": "MIT",
  "main": "./index.js",
  "scripts": {},
  "engines": {
    "node": "*"
  },
  "dependencies": {
    "sanitizer": "0.1.1"
  },
  "keywords": [
    "express",
    "sanitize",
    "sanitization",
    "xss"
  ],
  "bugs": {
    "url": "https://github.com/markau/express-sanitizer/issues"
  },
  "_id": "express-sanitizer@0.1.1",
  "_from": "express-sanitizer@~0.1.1",
  "readme": "# express-sanitizer\n\n[![Build Status](https://travis-ci.org/markau/express-sanitizer.png?branch=master)](https://travis-ci.org/markau/express-sanitizer)\n\nAn express middleware for [Caja-HTML-Sanitizer](https://github.com/theSmaw/Caja-HTML-Sanitizer), which wraps [Google Caja sanitizer](https://code.google.com/p/google-caja/wiki/JsHtmlSanitizer).  \n\nA useful complement to the [express-validator](https://github.com/ctavan/express-validator) -- to fill a gap now that XSS sanitization support has been removed from that module's parent [node-validator](https://github.com/chriso/node-validator).\n\n## Installation\n\n```\nnpm install express-sanitizer\n```\n\n## Usage\n\nNeeds to be called after express.bodyParser() and before anything that requires the sanitized input, e.g.:\n\n```javascript\nvar express = require('express'),\n    expressSanitizer = require('express-sanitizer');\n\napp.use(express.bodyParser());\napp.use(expressSanitizer([options])); // this line follows express.bodyParser()\n```\n\n```javascript\napp.post('/:urlparam', function(req, res) {\n  //validation here\n\n  // replace an HTTP posted body property with the sanitized string\n  req.body.propertyToSanitize = req.sanitize(req.param('propertyToSanitize'));\n});\n\n```\n\n## Output\n\nThe string \n```javascript\n'<script>hello</script> world'\n```\nwill be sanitized to ' world'.\n\n## Limitations\n\nThis is a basic implementation of [Caja-HTML-Sanitizer](https://github.com/theSmaw/Caja-HTML-Sanitizer) with the specific purpose of mitigating against persistent XSS risks. \n\n## Caveats\n\nThis module trusts the dependencies to provide basic persistent XSS risk mitigation. A user of this package should review all packages and make their own decision on security and fitness for purpose. \n\n## Changelog\n\n### v0.1.0\n- Initial release\n\n## Contributors\n\n- Mark Andrews <20metresbelow@gmail.com> - Wrap the sanitizer in an npm package\n\n## License\n\nCopyright (c) 2014 Mark Andrews <20metresbelow@gmail.com>, MIT License\n\n",
  "readmeFilename": "README.md"
}
